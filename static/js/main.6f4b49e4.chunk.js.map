{"version":3,"sources":["components/Heading.jsx","components/Form.jsx","components/Forecast.jsx","components/App.jsx","index.js"],"names":["Heading","props","Form","onSubmit","loadWeather","type","name","placeholder","Forecast","className","country","city","temprature","humidity","pressure","icon","src","alt","description","error","api_key","App","state","getWeather","e","a","target","elements","value","preventDefault","fetch","api_call","json","response","setState","main","temp","sys","weather","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2OASeA,EARC,SAACC,GACb,OACI,gCACK,2DACA,8FCKEC,EATH,SAACD,GACT,OACI,uBAAME,SAAWF,EAAMG,YAAvB,UACI,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,kBAC3C,uBAAOF,KAAK,OAAOC,KAAK,UAAUC,YAAY,qBAC9C,sDCQGC,G,MAbE,SAACP,GACd,OACI,sBAAKQ,UAAU,UAAf,UACKR,EAAMS,SAAWT,EAAMU,MAAQ,0CAAaV,EAAMU,KAAnB,IAA0BV,EAAMS,WAC/DT,EAAMW,YAAc,4CAAeX,EAAMW,WAArB,OACpBX,EAAMY,UAAY,2CAAcZ,EAAMY,SAApB,OAClBZ,EAAMa,UAAY,2CAAcb,EAAMa,SAApB,OAClBb,EAAMc,MAAQ,qBAAKC,IAAG,0CAAqCf,EAAMc,KAA3C,QAAuDE,IAAK,iBAClFhB,EAAMiB,aAAe,6CAAgBjB,EAAMiB,eAC3CjB,EAAMkB,OAAS,4BAAIlB,EAAMkB,aCLhCC,EAAU,mCA2DDC,E,4MAzDbC,MAAQ,CAENX,KAAM,GACND,QAAS,GACTE,WAAY,GACZC,SAAU,GACVC,SAAU,GACVC,KAAM,GACNG,YAAa,GACbC,MAAO,I,EAETI,W,uCAAa,WAAMC,GAAN,qBAAAC,EAAA,6DACLd,EAAMa,EAAEE,OAAOC,SAAShB,KAAKiB,MAC7BlB,EAASc,EAAEE,OAAOC,SAASjB,QAAQkB,MAC1CJ,EAAEK,iBAHU,SAIWC,MAAK,2DAAsDnB,EAAtD,YAA8DD,EAA9D,+BAA4FU,IAJ5G,cAINW,EAJM,gBAMUA,EAASC,OANnB,OAMPC,EANO,OAOTtB,GAAQD,EACV,EAAKwB,SAAS,CACdtB,WAAYqB,EAASE,KAAKC,KAC1BzB,KAAMsB,EAAS3B,KACfI,QAASuB,EAASI,IAAI3B,QACtBG,SAAUoB,EAASE,KAAKtB,SACxBC,SAAUmB,EAASE,KAAKrB,SACxBC,KAAMkB,EAASK,QAAQ,GAAGvB,KAC1BG,YAAae,EAASK,QAAQ,GAAGpB,YACjCC,MAAO,KAGP,EAAKe,SAAS,CACZf,MAAM,oCApBG,4C,kGAwBf,WACE,OACA,sBAAKV,UAAU,YAAf,UACA,cAAC,EAAD,IACA,qBAAKA,UAAU,OAAf,SACC,cAAC,EAAD,CAAML,YAAamC,KAAKhB,eAExB,qBAAKd,UAAU,UAAf,SACA,cAAC,EAAD,CACCG,WAAY2B,KAAKjB,MAAMV,WACvBD,KAAM4B,KAAKjB,MAAMX,KACjBD,QAAS6B,KAAKjB,MAAMZ,QACpBG,SAAU0B,KAAKjB,MAAMT,SACrBC,SAAUyB,KAAKjB,MAAMR,SACrBC,KAAMwB,KAAKjB,MAAMP,KACjBG,YAAaqB,KAAKjB,MAAMJ,YACxBC,MAAOoB,KAAKjB,MAAMH,iB,GApDJqB,IAAMC,WCHxBC,IAASC,OAAQ,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.6f4b49e4.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Heading = (props)=>{\r\n    return(\r\n        <div>\r\n             <h1> What's the weather like?</h1>\r\n             <h3>Find out what's the weather conditions are in your city.</h3>\r\n        </div>\r\n    );\r\n}\r\nexport default Heading;","import React from \"react\";\r\nconst Form =(props)=>{\r\n    return(\r\n        <form onSubmit= {props.loadWeather}>\r\n            <input type=\"text\" name=\"city\" placeholder=\"choose a city\"></input>\r\n            <input type=\"text\" name=\"country\" placeholder=\"choose a country\"></input>\r\n            <button>Get Wheather</button>\r\n        </form>\r\n    );\r\n}\r\nexport default Form;","import React from 'react';\r\nconst Forecast = (props) =>{\r\n    return(\r\n        <div className=\"weather\">\r\n            {props.country && props.city && <p>Location:{props.city},{props.country}</p>}\r\n            {props.temprature && <p>Temprature:{props.temprature} </p>}\r\n            {props.humidity && <p>Humidity: {props.humidity} </p>}\r\n            {props.pressure && <p>Pressure: {props.pressure} </p>}\r\n            {props.icon && <img src={`http://openweathermap.org/img/w/${props.icon}.png`} alt= \"weather icon\"/>}\r\n            {props.description && <p>Conditions: {props.description}</p>}\r\n            {props.error && <p>{props.error}</p>}\r\n        </div>\r\n    );\r\n}\r\nexport default Forecast;","import React from \"react\";\nimport Heading from './Heading';\nimport Form from './Form';\nimport './App.css';\nimport Forecast from \"./Forecast\";\nconst api_key = \"8f73b4ef87af1a00fa7228cd0f6441c7\";\nclass App extends React.Component {\n  state = {\n   \n    city: \"\",\n    country: \"\",\n    temprature: \"\",\n    humidity: \"\",\n    pressure: \"\",\n    icon: \"\",\n    description: \"\",\n    error: \"\"\n  }\n  getWeather = async(e) => {\n    const city =e.target.elements.city.value;\n    const country =e.target.elements.country.value;\n   e.preventDefault();\n   const api_call = await fetch (`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=metric&appid=${api_key}`);\n  \n  const response = await api_call.json();\n  if (city && country){\n    this.setState({\n    temprature: response.main.temp,\n    city: response.name,\n    country: response.sys.country,\n    humidity: response.main.humidity,\n    pressure: response.main.pressure,\n    icon: response.weather[0].icon,\n    description: response.weather[0].description,\n    error: \"\"\n  })\n  }else{\n    this.setState({\n      error:\"Please fill out input fields...\"\n    })\n  }\n}\nrender() {\n  return(\n  <div className=\"container\">\n  <Heading />\n  <div className=\"form\">\n   <Form loadWeather={this.getWeather} />    \n   </div>\n   <div className=\"weather\">\n   <Forecast\n    temprature={this.state.temprature} \n    city={this.state.city}\n    country={this.state.country}\n    humidity={this.state.humidity}\n    pressure={this.state.pressure}\n    icon={this.state.icon}\n    description={this.state.description}\n    error={this.state.error}\n    />\n    </div>\n   </div>  );\n   }\n  }\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nReactDOM.render( <App />,document.getElementById('root'));"],"sourceRoot":""}